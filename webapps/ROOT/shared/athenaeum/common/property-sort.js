"use strict";
function value(propertyName) {
    return function (object) { return object[propertyName]; };
}
exports.value = value;
function valueToDate(propertyName) {
    return function (object) { return new Date(object[propertyName]); };
}
exports.valueToDate = valueToDate;
function valueToUppercase(propertyName) {
    return function (object) { return object[propertyName].toUpperCase(); };
}
exports.valueToUppercase = valueToUppercase;
function valueToLowercase(propertyName) {
    return function (object) { return object[propertyName].toLowerCase(); };
}
exports.valueToLowercase = valueToLowercase;
function reverse(sortFn) {
    return function (object1, object2) { return sortFn(object2, object1); };
}
exports.reverse = reverse;
function asc(valueFn) {
    return function (object1, object2) {
        var value1 = valueFn(object1);
        var value2 = valueFn(object2);
        if (value1 < value2) {
            return -1;
        }
        else if (value1 > value2) {
            return 1;
        }
        else {
            return 0;
        }
    };
}
exports.asc = asc;
function desc(valueFn) {
    return reverse(asc(valueFn));
}
exports.desc = desc;
function multisort() {
    var propFns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        propFns[_i - 0] = arguments[_i];
    }
    return function (a, b) {
        for (var _i = 0, propFns_1 = propFns; _i < propFns_1.length; _i++) {
            var fn = propFns_1[_i];
            var result = fn(a, b);
            if (result === 0) {
                continue;
            }
            return result;
        }
        return 0;
    };
}
exports.multisort = multisort;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi9wcm9wZXJ0eS1zb3J0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFPQSxlQUFzQixZQUFZO0lBQzlCLE1BQU0sQ0FBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLE1BQU0sQ0FBQyxZQUFZLENBQUMsRUFBcEIsQ0FBb0IsQ0FBQztBQUMxQyxDQUFDO0FBRmUsYUFBSyxRQUVwQixDQUFBO0FBRUQscUJBQTRCLFlBQVk7SUFDcEMsTUFBTSxDQUFDLFVBQUEsTUFBTSxJQUFJLE9BQUEsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQTlCLENBQThCLENBQUM7QUFDcEQsQ0FBQztBQUZlLG1CQUFXLGNBRTFCLENBQUE7QUFFRCwwQkFBaUMsWUFBWTtJQUN6QyxNQUFNLENBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQWxDLENBQWtDLENBQUM7QUFDeEQsQ0FBQztBQUZlLHdCQUFnQixtQkFFL0IsQ0FBQTtBQUVELDBCQUFpQyxZQUFZO0lBQ3pDLE1BQU0sQ0FBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBbEMsQ0FBa0MsQ0FBQztBQUN4RCxDQUFDO0FBRmUsd0JBQWdCLG1CQUUvQixDQUFBO0FBRUQsaUJBQXdCLE1BQU07SUFDMUIsTUFBTSxDQUFDLFVBQUMsT0FBTyxFQUFFLE9BQU8sSUFBSyxPQUFBLE1BQU0sQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLEVBQXhCLENBQXdCLENBQUM7QUFDMUQsQ0FBQztBQUZlLGVBQU8sVUFFdEIsQ0FBQTtBQUVELGFBQW9CLE9BQWlCO0lBQ2pDLE1BQU0sQ0FBQyxVQUFDLE9BQU8sRUFBRSxPQUFPO1FBQ3BCLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoQyxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFaEMsRUFBRSxDQUFDLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDbEIsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2QsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN6QixNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ2IsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNiLENBQUM7SUFDTCxDQUFDLENBQUM7QUFDTixDQUFDO0FBYmUsV0FBRyxNQWFsQixDQUFBO0FBRUQsY0FBcUIsT0FBTztJQUN4QixNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQ2pDLENBQUM7QUFGZSxZQUFJLE9BRW5CLENBQUE7QUFFRDtJQUEwQixpQkFBc0I7U0FBdEIsV0FBc0IsQ0FBdEIsc0JBQXNCLENBQXRCLElBQXNCO1FBQXRCLGdDQUFzQjs7SUFDNUMsTUFBTSxDQUFDLFVBQVMsQ0FBQyxFQUFFLENBQUM7UUFDaEIsR0FBRyxDQUFDLENBQVcsVUFBTyxFQUFQLG1CQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPLENBQUM7WUFBbEIsSUFBSSxFQUFFLGdCQUFBO1lBQ1AsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN0QixFQUFFLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDZixRQUFRLENBQUM7WUFDYixDQUFDO1lBQ0QsTUFBTSxDQUFDLE1BQU0sQ0FBQztTQUNqQjtRQUNELE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDYixDQUFDLENBQUM7QUFDTixDQUFDO0FBWGUsaUJBQVMsWUFXeEIsQ0FBQSIsImZpbGUiOiJjb21tb24vcHJvcGVydHktc29ydC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGNvcHlyaWdodCBDb3B5cmlnaHQgKGMpIDIwMTUsIFBhY2lmaWMgQmlvc2NpZW5jZXMgb2YgQ2FsaWZvcm5pYSwgSW5jLlxuICpcbiAqIEBhdXRob3IgPGEgaHJlZj1cIm1haWx0bzptc2tpbm5lckBwYWNpZmljYmlvc2NpZW5jZXMuY29tXCI+TWl0Y2ggU2tpbm5lcjwvYT5cbiAqIEBhdXRob3IgPGEgaHJlZj1cIm1haWx0bzpzc2FuZmlsaXBwb0BwYWNpZmljYmlvc2NpZW5jZXMuY29tXCI+U2FsIFNhbmZpbGlwcG88L2E+XG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbHVlKHByb3BlcnR5TmFtZSkge1xuICAgIHJldHVybiBvYmplY3QgPT4gb2JqZWN0W3Byb3BlcnR5TmFtZV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWx1ZVRvRGF0ZShwcm9wZXJ0eU5hbWUpIHtcbiAgICByZXR1cm4gb2JqZWN0ID0+IG5ldyBEYXRlKG9iamVjdFtwcm9wZXJ0eU5hbWVdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbHVlVG9VcHBlcmNhc2UocHJvcGVydHlOYW1lKSB7XG4gICAgcmV0dXJuIG9iamVjdCA9PiBvYmplY3RbcHJvcGVydHlOYW1lXS50b1VwcGVyQ2FzZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsdWVUb0xvd2VyY2FzZShwcm9wZXJ0eU5hbWUpIHtcbiAgICByZXR1cm4gb2JqZWN0ID0+IG9iamVjdFtwcm9wZXJ0eU5hbWVdLnRvTG93ZXJDYXNlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXZlcnNlKHNvcnRGbikge1xuICAgIHJldHVybiAob2JqZWN0MSwgb2JqZWN0MikgPT4gc29ydEZuKG9iamVjdDIsIG9iamVjdDEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNjKHZhbHVlRm46IEZ1bmN0aW9uKSB7XG4gICAgcmV0dXJuIChvYmplY3QxLCBvYmplY3QyKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlMSA9IHZhbHVlRm4ob2JqZWN0MSk7XG4gICAgICAgIGNvbnN0IHZhbHVlMiA9IHZhbHVlRm4ob2JqZWN0Mik7XG5cbiAgICAgICAgaWYgKHZhbHVlMSA8IHZhbHVlMikge1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlMSA+IHZhbHVlMikge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZXNjKHZhbHVlRm4pIHtcbiAgICByZXR1cm4gcmV2ZXJzZShhc2ModmFsdWVGbikpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbXVsdGlzb3J0KC4uLnByb3BGbnM6IEZ1bmN0aW9uW10pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oYSwgYikge1xuICAgICAgICBmb3IgKGxldCBmbiBvZiBwcm9wRm5zKSB7XG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gZm4oYSwgYik7XG4gICAgICAgICAgICBpZiAocmVzdWx0ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwO1xuICAgIH07XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=